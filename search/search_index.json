{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This document describes the gRPC-based Bear Base API Service for third-party clients. The Bear Base API service enables third parties to:</p> <ol> <li>Send commands to control the robots</li> <li>Receive status updates from robots (e.g., odometry, battery status)</li> <li>Retrieve information about the robots</li> </ol> <p>For a detailed list of API capabilities, please navigate through the API Reference. Bear Base API uses the open-source gRPC framework. In the future, corresponding REST APIs will be added.</p>"},{"location":"#overview","title":"Overview","text":"<p>Third-party clients communicate with the Bear Base API service via gRPC. For request/response type communication, unary RPC is used. For scenarios where clients need continuous updates from the Bear Base API service, server streaming RPC is utilized.</p> <p>For server streaming RPCs, all responses include metadata containing a timestamp and a sequence number:</p> <ul> <li>Timestamp: The timestamp is based on the local clock where the response was generated and is not globally synchronized, so it should not be used for ordering responses.</li> <li>Sequence Number: The sequence number is guaranteed to be incremental and can be used to detect duplicate responses. Note that the sequence number may reset to 0 at any time, though this should be rare (e.g., only during a service or robot restart).</li> </ul> <p>If strict detection of response duplication is desired, both the sequence number and timestamp should be used together. </p> <p>Also note the following for streaming RPC queries:</p> <ul> <li>It will persist for a maximum of 60 minutes, if the query is still needed longer than this time a query must be reissued.</li> <li>The messages have delivery guarantees (i.e. QoS) of \u201cbest effort\u201d and not \u201cat least once\u201d, unless specifically noted. This means that some messages can be dropped and not delivered to clients due to multiple reasons such as, but not limited to, packet loss, network traffic load, and processing failures.</li> <li>As noted above, clients need to handle duplicate messages.</li> </ul> <p>When a gRPC call completes successfully, the server returns an OK status along with the specified response to the client. If an error occurs, gRPC returns an error status code and an error message.</p>"},{"location":"#message-encoding","title":"Message Encoding","text":"<p>gRPC uses Protocol Buffers which provide a serialization format for encoding and decoding, as   well as Interface  Definition  Language</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v01-february-5-2025","title":"v0.1 - February 5, 2025","text":""},{"location":"changelog/#breaking-changes","title":"Breaking Changes","text":"<ul> <li>OdometryState has been moved from <code>robot/status.proto</code> to <code>robot/robot.proto</code></li> </ul>"},{"location":"changelog/#newly-added-endpoints","title":"Newly Added Endpoints","text":"<p>API are now grouped in the following categories:</p> <ul> <li>Map</li> <li>Mission</li> <li>Navigation</li> <li>Settings</li> <li>Status</li> <li>System</li> </ul>"},{"location":"changelog/#map","title":"Map","text":"<ul> <li>GetAnnotation</li> <li>GetLocation</li> <li>GetMap</li> <li>GetMapContent</li> <li>GetMapData</li> <li>SwitchMap</li> </ul>"},{"location":"changelog/#mission","title":"Mission","text":"<ul> <li>AppendMission</li> <li>ChargeRobot</li> <li>CreateMission</li> <li>SubscribeMissionStatus</li> <li>UpdateMission</li> </ul>"},{"location":"changelog/#navigation","title":"Navigation","text":"<ul> <li>LocalizeRobot</li> <li>SetEmergencyStop</li> <li>SetPose</li> <li>SubscribeEmergencyStopStatus</li> <li>SubscribeLocalizationStatus</li> </ul>"},{"location":"changelog/#settings","title":"Settings","text":"<ul> <li>SetSetting</li> <li>SubscribeSettings</li> </ul>"},{"location":"changelog/#status","title":"Status","text":"<ul> <li>SubscribeOperationStatus</li> </ul>"},{"location":"changelog/#system","title":"System","text":"<ul> <li>ForgetWifi</li> <li>RunSystemCommand</li> <li>SubscribeSystemStatus</li> </ul>"},{"location":"changelog/#v00-december-5-2024","title":"v0.0 - December 5, 2024","text":"<p>The start of the journey...</p>"},{"location":"changelog/#newly-added-endpoints_1","title":"Newly Added Endpoints","text":"<ul> <li>ConnectWifi</li> <li>DriveRobot</li> <li>GetSystemInfo</li> <li>ListWifiConnections</li> <li>SubscribeBatteryStatus</li> <li>SubscribeNetworkStatus</li> <li>SubscribeOdometryStatus</li> <li>SubscribeRobotPose</li> </ul>"},{"location":"guides/troubleshooting/","title":"Troubleshooting","text":""},{"location":"guides/troubleshooting/#troubleshooting","title":"Troubleshooting","text":"<p>Work in progress</p>"},{"location":"guides/setup/examples_python/","title":"Examples","text":""},{"location":"guides/setup/examples_python/#python-examples","title":"Python Examples","text":"<p>This page provides example usage in Python with our APIs</p>"},{"location":"guides/setup/examples_python/#compiling-proto-files-to-python","title":"Compiling Proto Files to Python","text":"<p>Use the <code>protoc</code> compiler to generate Python files from your <code>.proto</code> files.</p> <p>For example, to drive the robot we need the Service from <code>robot_api_service.proto</code> and Twist message from <code>math.proto</code> <pre><code>python -m grpc_tools.protoc -I=/path_to_repository/bearrobotics-public/base/ --python_out=. --grpc_python_out=. bearrobotics/api/v0/robot/robot_api_service.proto\n\npython -m grpc_tools.protoc -I=/path_to_repository/bearrobotics-public/base/ --python_out=. bearrobotics/api/v0/common/math.proto \n</code></pre></p>"},{"location":"guides/setup/examples_python/#driving-the-robot","title":"Driving the Robot","text":"<p>Prerequisite: Compiled pb2 files for <code>robot_api_service</code> and <code>math</code></p> <p>Script: The following script turns the robot in place at 0.2 m/s at a set rate of 15Hz. To stop the robot from rotating, terminate the script. <pre><code>import time\nimport grpc\nfrom math_pb2 import Twist\nfrom robot_api_service_pb2 import DriveRobotRequest\nfrom robot_api_service_pb2_grpc import RobotServiceStub\n\n# Server details\nSERVER_ADDRESS = \"10.10.127.2:5123\"\n\n# Twist parameters\nLINEAR_VELOCITY = 0.0  # m/s\nANGULAR_VELOCITY = 0.2  # rad/s\nPUBLISH_RATE = 15  # Hz\n\ndef main():\n    # Establish a gRPC channel\n    channel = grpc.insecure_channel(SERVER_ADDRESS)\n    stub = RobotServiceStub(channel)\n\n    try:\n        while True:\n            # Create a Twist message\n            twist = Twist(\n                linear_velocity=LINEAR_VELOCITY,\n                angular_velocity=ANGULAR_VELOCITY\n            )\n\n            # Create a DriveRobotRequest\n            request = DriveRobotRequest(twist=twist)\n\n            # Send the request \n            stub.DriveRobot(iter([request]))\n            print(f\"Published: linear_velocity={LINEAR_VELOCITY}, angular_velocity={ANGULAR_VELOCITY}\")\n\n            # Maintain 15 Hz publishing rate\n            time.sleep(1 / PUBLISH_RATE)\n    except KeyboardInterrupt:\n        print(\"Stopped publishing.\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre></p>"},{"location":"guides/setup/setup_network/","title":"Network Connectivity","text":""},{"location":"guides/setup/setup_network/#network-connectivity","title":"Network Connectivity","text":"<p>Using the Bear Robot API Server does not require an internet connection. However, an internet connection is required to get the full experience with Universe (Bear's fleet management system) integration.</p>"},{"location":"guides/setup/setup_network/#local-connectivity-ethernet","title":"Local Connectivity (Ethernet)","text":"<p>The ethernet port on Bear's PC is configured with IP 10.10.127.2. You need to set up network configuration to ensure packets can reach between your PC and Bear's PC.</p> <p>1. Check the interface name for the ethernet connection In this example, the interface name is <code>enxf8e43bc77e2f</code>:</p> <pre><code>ip addr show\n</code></pre> <p>Example Output:</p> <pre><code>7: enxf8e43bc77e2f: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000\n   link/ether f8:e4:3b:c7:7e:2f brd ff:ff:ff:ff:ff:ff\n   inet6 fe80::93ee:2155:af0c:a3e8/64 scope link noprefixroute\n      valid_lft forever preferred_lft forever\n</code></pre> <p>2. Configure the network interface through a persistent configuration file:</p> <p>In this example, we are using IP 10.10.127.3. The configuration file may be different based on your machine. The following instructions is for Ubuntu/Debian-based systems.</p> <p>If you have a <code>/etc/network/interfaces</code> file (on older systems), append the following to the file:</p> <pre><code>auto enxf8e43bc77e2f\niface enxf8e43bc77e2f inet static\n    address 10.10.127.3\n    netmask 255.255.255.0\n    gateway 10.10.127.1  # Optional, if you don't require internet access from this interface, omit this line.\n</code></pre> <p>Apply the changes</p> <pre><code>sudo systemctl restart networking\n</code></pre> <p>If you have a <code>/etc/netplan/01-*.yaml</code> file (on newer systems), append the following under <code>network</code>:</p> <pre><code>network:\n   # ...\n   # additional settings here\n   # ...\n   ethernets:\n      enxf8e43bc77e2f:\n         dhcp4: no\n         addresses:\n           - 10.10.127.3/24\n</code></pre> <p>Apply the changes</p> <pre><code>sudo netplan apply\n</code></pre> <p>3. Run a ping test to ensure you can communicate with Bear's PC (10.10.127.2):</p> <pre><code>ping 10.10.127.2\n</code></pre> <p>If the ping transmits successful packets, then you can now communicate with BRAS!</p>"},{"location":"guides/setup/setup_network/#connecting-to-wifi","title":"Connecting to WiFi","text":"<p>Internet connection is required to connect to Universe (Bear's fleet management system). You can use ConnectWifi to set the network.</p>"},{"location":"v0.0/common/Annotations/","title":"Annotations","text":""},{"location":"v0.0/common/Annotations/#message-types","title":"Message Types","text":""},{"location":"v0.0/common/Annotations/#eventmetadata","title":"EventMetadata","text":"<ul> <li>Fields:<ul> <li><code>timestamp</code> (Timestamp): The time when the event was recorded.</li> <li><code>sequence_number</code> (int64): An incremental sequence number generated by the robot. The sequence number should never be negative and can be reset to 0. i.e. sequence is valid if it is larger than the previous number or 0.</li> </ul> </li> </ul>"},{"location":"v0.0/common/Math/","title":"Math","text":""},{"location":"v0.0/common/Math/#message-types","title":"Message Types","text":""},{"location":"v0.0/common/Math/#twist","title":"Twist","text":"<ul> <li>Fields:<ul> <li><code>linear_velocity</code> (float): The desired speed to drive up to in meters-per-second (m/s). A positive value should be used for driving forward and a negative value may be used to drive in reverse.</li> <li><code>angular_velocity</code> (float): The desired rate of rotation in radians-per-second (rad/s). A positive value is used for a clockwise (right) point turn while a negative value should be used for counter-clockwise (left) point turn.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Network/","title":"Network","text":""},{"location":"v0.0/robot/Network/#message-types","title":"Message Types","text":""},{"location":"v0.0/robot/Network/#authentication","title":"Authentication","text":"<ul> <li>Fields:<ul> <li><code>username</code> (string): User provided input for enterprise networks requiring username. For personal and unsecure networks, username may be omitted.</li> <li><code>password</code> (string): User provided input for password input for secure networks.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Network/#connectionoptions","title":"ConnectionOptions","text":"<ul> <li>Fields:<ul> <li><code>cidr_ip</code> (string): Classless inter-domain routing IP used to configure a static IP. This should be a static IPv4 address followed by a '/' and suffix. e.g. '192.168.1.123/24'</li> <li><code>gateway_ip</code> (string): Network gateway that local traffic is routed to. e.g. '192.168.1.1'</li> <li><code>dns_ips</code> (string): A list of DNS servers to override the DNS resolution provided by the host network. e.g. ['8.8.8.8', '8.8.4.4']</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Network/#networkstate","title":"NetworkState","text":"<ul> <li>Fields:<ul> <li><code>connected_wifi</code> (Wifi): State related to the currently connected Wi-Fi. No connected_wifi indicates that no Wi-Fi network is connected.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Network/#wifi","title":"Wifi","text":"<ul> <li>Fields:<ul> <li><code>ssid</code> (string): SSID of Wi-Fi network</li> <li><code>signal_strength</code> (int32): Signal strength of the connected Wi-Fi connection in intervals of 5, within a range of 0 to 100.</li> <li><code>security</code> (Security): Security requirements for the network</li> <li><code>connected_state</code> (Connection): Currently connected Wi-Fi state</li> </ul> </li> <li> <p>Enums:</p> Security Numeric Value Description SECURITY_UNKNOWN 0 Network security is unknown. SECURITY_UNSECURED 1 Unsecured network that do not require any authentication. SECURITY_PASSWORD_SECURED 2 Password secured network. e.g. WPA2, WPA3 and WEP networks SECURITY_USERNAME_PASSWORD_SECURED 3 Login required network. i.e. Enterprise networks Connection Numeric Value Description CONNECTION_UNKNOWN 0 The family is unknown. CONNECTION_BEAR_CONNECTED 1 Universe &gt; Bear services and network connection are both working. CONNECTION_INTERNET_ONLY 2 Internet is connected but universe connection cannot be established. CONNECTION_NO_INTERNET 3 Network is connected but it does not have an internet connection. </li> </ul>"},{"location":"v0.0/robot/Network/#wificonnections","title":"WifiConnections","text":"<ul> <li>Fields:<ul> <li><code>saved_networks</code> (Wifi): List of remembered Wi-Fi networks (not necessarily available)</li> <li><code>available_networks</code> (Wifi): List of other available networks</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Network/#wifiinfo","title":"WifiInfo","text":"<ul> <li>Fields:<ul> <li><code>current_ssid</code> (string): Currently connected Wi-Fi network's SSID. This will be empty if the robot is not connected to a network.</li> <li><code>cidr_ip</code> (string): Classless inter-domain routing IPv4 address followed by a suffix representing the number of bits for the subnet mask. e.g. \"192.168.1.123/24\"</li> <li><code>gateway_ip</code> (string): Gateway IP to direct local network traffic. This typically mirrors the first 3 octets in the network IP with the last octet ending in 1. e.g. \"192.168.1.1\"</li> <li><code>mac_address</code> (string): Unique MAC address for the Wi-Fi interface e.g. \"aa:1a:a1:a1:1a:11\"</li> <li><code>dns_ips</code> (string): A list of DNS servers to override the DNS resolution provided by the host network. e.g. ['8.8.8.8', '8.8.4.4']</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Robot/","title":"Robot","text":""},{"location":"v0.0/robot/Robot/#message-types","title":"Message Types","text":""},{"location":"v0.0/robot/Robot/#pose","title":"Pose","text":"<ul> <li>Fields:<ul> <li><code>x_meters</code> (float): x coordinate inside the Map relative to the map\u2019s specified origin.</li> <li><code>y_meters</code> (float): y coordinate inside the Map relative to the map\u2019s specified origin.</li> <li><code>heading_radians</code> (float): The heading of the robot in radians. Ranges from -PI to PI, with 0.0 pointing along the x-axis.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/","title":"RobotAPIService","text":""},{"location":"v0.0/robot/RobotApiService/#robotapiservice","title":"RobotAPIService","text":""},{"location":"v0.0/robot/RobotApiService/#connectwifi","title":"ConnectWifi","text":"<ul> <li>Request Type: ConnectWifiRequest</li> <li>Response Type: ConnectWifiResponse</li> <li>Description:   Clients can connect the base to an existing Wi-Fi network.  To connect to secure networks, <code>Authentication</code> can be set. <code>ConnectionOptions</code> can be used if further configuration is needed for the Wi-Fi network. <code>ssid</code> should be provided and nearby broadcasted networks may be scanned with ListWifiConnections.</li> </ul> <p>**Example: Connecting to Wi-Fi Networks in ASCII Proto Format **  To connect to an open public Wi-Fi network <code>bear_public_wifi</code>: <pre><code>// Sample Request\nssid: 'bear_public_wifi'\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre></p> <p>To connect to a private Wi-Fi network <code>bear_private_wifi</code> that requires a password: <pre><code>// Sample Request\nssid: 'bear_private_wifi'\nauthentication {\n  password: 'password_for_private'\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre></p> <p>Example: To connect to a private Wi-Fi network <code>bear_private_wifi2</code> that requires a username and password: <pre><code>// Sample Request\nssid: 'bear_private_wifi2'\nauthentication {\n  username: 'bear_user'\n  password: 'password_for_private2'\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre></p> <p>Example: To connect to an open public Wi-Fi network <code>bear_public_wifi2</code> that has a gateway and needs to specify DNS: <pre><code>// Sample Request\nssid: 'bear_public_wifi2'\nconnection_options {\n  gateway_ip: '192.168.1.1'\n  dns_ips: [ '1.1.1.1', '1.0.0.1', '8.8.8.8', '8.8.4.4' ]\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#getsysteminfo","title":"GetSystemInfo","text":"<ul> <li>Request Type: GetSystemInfoRequest</li> <li>Response Type: GetSystemInfoResponse</li> <li>Description:   Get the overall robot system information.When called, the server returns robot system information.The system info tends to be static and does not change often.</li> </ul> <p>Example in ASCII proto format <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\nsystem_Info {\n  software_version: \u2018base-slim-24.11.875;\n  firmware_version: '3.6.0.2'\n  robot_family: ROBOT_FAMILY_SERVI_PLUS\n  robot_id: 'pennybot-xxxxxx'\n  locale_language: 'en'\n  wifi_info {\n    current_ssid: 'bear_demo'\n    cidr_ip: '10.1.30.104/24'\n    gateway_ip: '10.1.30.1'\n    macAddress: 'E4:C7:67:EE:FF:AA'\n    dns_ips: [ '1.1.1.1', '1.0.0.1' ]\n  }\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#listwificonnections","title":"ListWifiConnections","text":"<ul> <li>Request Type: ListWifiConnectionsRequest</li> <li>Response Type: ListWifiConnectionsResponse</li> <li>Description:   List all available Wi-Fi networks as well as known Wi-Fi networks.</li> </ul> <p>Example in ASCII proto format <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\nwifi_connections {\n  saved_networks {\n    ssid: 'bear_test'\n    signal_strength: 90\n    security: SECURITY_PASSWORD_SECURED\n  }\n  saved_networks {\n    ssid: 'bear_public'\n    signal_strength: 87\n    security: SECURITY_UNSECURED\n  }\n  available_networks {\n    ssid: 'bear_demo'\n    signal_strength: 90\n    security: SECURITY_PASSWORD_SECURED\n  }\n  available_networks {\n    ssid: 'public_neighbor'\n    signal_strength: 69\n    security: SECURITY_UNSECURED\n  }\n  available_networks {\n    ssid: 'bear_private'\n    signal_strength: 90\n    security: SECURITY_PASSWORD_SECURED\n  }\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#subscribebatterystatus","title":"SubscribeBatteryStatus","text":"<ul> <li>Request Type: SubscribeBatteryStatusRequest</li> <li>Response Type: SubscribeBatteryStatusResponse</li> <li>Description:   Subscribe to the robot battery status.Upon subscription, the latest known battery status is sent,followed by updates whenever the battery status changes.</li> </ul> <p>Example in ASCII proto format where base is charging followed by disconnecting the charger <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\n{\n  metadata {\n    timestamp {\n      seconds: 1714313000\n      nanos: 0\n    }\n    sequence_number: 50\n  }\n  battery_state {\n    charge_percent: 99\n    state: STATE_CHARGING\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1714315000\n      nanos: 0\n    }\n    sequence_number: 51\n  }\n  battery_state {\n    charge_percent: 100\n    state: STATE_CHARGING\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1714316000\n      nanos: 0\n    }\n    sequence_number: 52\n  }\n  battery_state {\n    charge_percent: 100\n    state: STATE_DISCHARGING\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1714326000\n      nanos: 0\n    }\n    sequence_number: 53\n  }\n  battery_state {\n    charge_percent: 99\n    state: STATE_DISCHARGING\n  }\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#subscribenetworkstatus","title":"SubscribeNetworkStatus","text":"<ul> <li>Request Type: SubscribeNetworkStatusRequest</li> <li>Response Type: SubscribeNetworkStatusResponse</li> <li>Description:   Subscribe to the robot's network status.Upon subscription, the server immediately sends the latest knownnetwork status, followed by updates whenever the network statuschanges.</li> </ul> <p>Example in ASCII proto format where initially there is no Wi-Fi connection, then a Wi-Fi is connected, and disconnected again <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\n{\n  metadata {\n    timestamp {\n      seconds: 1732161076001\n      nanos: 740591178\n    }\n    sequence_number: 15\n  }\n  network_state {}\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732161076101\n      nanos: 1654\n    }\n    sequence_number: 16\n  }\n  network_state {\n    connected_wifi {\n      ssid: 'bear_test'\n      signal_strength: 90\n      security: SECURITY_PASSWORD_SECURED\n    }\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732161076540\n      nanos: 905178\n    }\n    sequence_number: 17\n  }\n  network_state {}\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#subscribeodometrystatus","title":"SubscribeOdometryStatus","text":"<ul> <li>Request Type: SubscribeOdometryStatusRequest</li> <li>Response Type: SubscribeOdometryStatusResponse</li> <li>Description:   Subscribe to the robot's odometry status.Upon subscription, the server server provides regular updates (5Hz) of the odometry status.</li> </ul> <p>Example in ASCII proto format <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\n{\n  metadata {\n    timestamp {\n      seconds: 1732363871000\n      nanos: 966690012\n    }\n    sequence_number: 321\n  }\n  odometry_state {\n    pose {\n      x_meters: 0.44569823\n      y_meters: 0.122843966\n      heading_radians: 0.38896447\n    }\n    twist {\n      linear_velocity: 0.04743719\n      angular_velocity: 0.024076527\n    }\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732363871001\n      nanos: 148576818\n    }\n    sequence_number: 322\n  }\n  odometry_state {\n    pose {\n      x_meters: 0.44870216\n      y_meters: 0.124077715\n      heading_radians: 0.39042783\n    }\n    twist {\n      linear_velocity: 0.00031081674\n      angular_velocity: -0.00031484783\n    }\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732363871001\n      nanos: 340591393\n    }\n    sequence_number: 323\n  }\n  odometry_state {\n    pose {\n      x_meters: 0.44822562\n      y_meters: 0.12388177\n      heading_radians: 0.3896436\n    }\n    twist {\n      linear_velocity: -8.1940074e-05\n      angular_velocity: -0.00036711502\n    }\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732363871001\n      nanos: 528572177\n    }\n    sequence_number: 324\n  }\n  odometry_state {\n    pose {\n      x_meters: 0.44822484\n      y_meters: 0.12388145\n      heading_radians: 0.38963988\n    }\n    twist {}\n  }\n}\n{\n  metadata {\n    timestamp {\n      seconds: 1732363871001\n      nanos: 768605432\n    }\n    sequence_number: 325\n  }\n  odometry_state {\n    pose {\n      x_meters: 0.44822484\n      y_meters: 0.12388145\n      heading_radians: 0.38963988\n    }\n    twist {}\n  }\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#subscriberobotpose","title":"SubscribeRobotPose","text":"<ul> <li>Request Type: SubscribeRobotPoseRequest</li> <li>Response Type: SubscribeRobotPoseResponse</li> <li>Description: Clients can subscribe to receive robot pose updates.Upon subscription, the latest known robot pose is received, followed by updates at 5Hz.</li> </ul> <p>Example in ASCII proto format <pre><code>// Sample Request\n{}\n</code></pre> <pre><code>// Sample Response\n{\n  metadata {\n    timestamp {\n      seconds: 1715262000\n      nanos: 168576818\n    }\n    sequence_number: 175\n  }\n  pose {\n    x_meters: 12.522097\n    y_meters: -5.08858\n    heading_radians: -1.3201984\n  }\n}\n{\n  metadata {\n    timestamp {\n      Seconds: 1715262000\n      nanos: 360591391\n    }\n    sequence_number: 176\n  }\n  pose {\n    x_meters: 12.522099\n    y_meters: -5.088586\n    heading_radians: -1.3201984\n  }\n}\n{\n  metadata {\n    timestamp {\n      Seconds: 1715262000\n      nanos: 549562134\n    }\n    sequence_number: 177\n  }\n  pose {\n    x_meters: 12.522101\n    y_meters: -5.088586\n    heading_radians: -1.3201984\n  }\n}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#driverobot","title":"DriveRobot","text":"<ul> <li>Request Type: DriveRobotRequest</li> <li>Response Type: DriveRobotResponse</li> <li>Description:   Manually drive the robot.A fine grained level manual drive control that allows the user tospecify a desired linear and angular velocity. The command will besmoothed by the robot.The request message should be streamed at a rate of at least 5Hz forsmooth operation. If the frequency doesn't meet the requirements, itwill set the commanded velocity to zero.</li> </ul> <p>Example of driving in ASCII proto format Robot drives forward at 0.2 m/s <pre><code>// Sample Request at 5Hz\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre> Robot does an arced right turn at a constant speed of 0.2 m/s <pre><code>// Sample Request at 5Hz\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.1\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre> Robot does an arced left turn at a constant speed of -0.2 m/s <pre><code>// Sample Request at 5Hz\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: -0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: -0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: -0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: -0.1\n}\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: -0.1\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre> Robot accelerating from speed of 0.2 m/s to 0.25 m/s forward <pre><code>// Sample Request at 5Hz\ntwist {\n  linear_velocity: 0.2\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.21\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.22\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.23\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.24\n  angular_velocity: 0.0\n}\ntwist {\n  linear_velocity: 0.25\n  angular_velocity: 0.0\n}\n</code></pre> <pre><code>// Sample Response\n{}\n</code></pre></p>"},{"location":"v0.0/robot/RobotApiService/#message-types","title":"Message Types","text":""},{"location":"v0.0/robot/RobotApiService/#connectwifirequest","title":"ConnectWifiRequest","text":"<ul> <li>Fields:<ul> <li><code>ssid</code> (string): SSID of Wi-Fi network.</li> <li><code>authentication</code> (Authentication): Security details for the network. This field can be omitted if the network is unsecure.</li> <li><code>connection_options</code> (ConnectionOptions): Optional parameters for static IP configuration.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#connectwifiresponse","title":"ConnectWifiResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#driverobotrequest","title":"DriveRobotRequest","text":"<ul> <li>Fields:<ul> <li><code>twist</code> (Twist): The desired max linear and angular velocity to travel.</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#driverobotresponse","title":"DriveRobotResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#getsysteminforequest","title":"GetSystemInfoRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#getsysteminforesponse","title":"GetSystemInfoResponse","text":"<ul> <li>Fields:<ul> <li><code>system_info</code> (SystemInfo): Robot system details</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#listwificonnectionsrequest","title":"ListWifiConnectionsRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#listwificonnectionsresponse","title":"ListWifiConnectionsResponse","text":"<ul> <li>Fields:<ul> <li><code>wifi_connections</code> (WifiConnections): List of saved and available networks</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribebatterystatusrequest","title":"SubscribeBatteryStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribebatterystatusresponse","title":"SubscribeBatteryStatusResponse","text":"<ul> <li>Fields:<ul> <li><code>metadata</code> (EventMetadata): Timestamp and sequence number</li> <li><code>battery_state</code> (BatteryState): Battery and charge information</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribenetworkstatusrequest","title":"SubscribeNetworkStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribenetworkstatusresponse","title":"SubscribeNetworkStatusResponse","text":"<ul> <li>Fields:<ul> <li><code>metadata</code> (EventMetadata): Timestamp and sequence number</li> <li><code>network_state</code> (NetworkState): Network status</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribeodometrystatusrequest","title":"SubscribeOdometryStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscribeodometrystatusresponse","title":"SubscribeOdometryStatusResponse","text":"<ul> <li>Fields:<ul> <li><code>metadata</code> (EventMetadata): Timestamp and sequence number</li> <li><code>odometry_state</code> (OdometryState): Current odometry information</li> </ul> </li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscriberobotposerequest","title":"SubscribeRobotPoseRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.0/robot/RobotApiService/#subscriberobotposeresponse","title":"SubscribeRobotPoseResponse","text":"<ul> <li>Fields:<ul> <li><code>metadata</code> (EventMetadata): Timestamp and sequence number</li> <li><code>pose</code> (Pose): Current robot position and orientation</li> </ul> </li> </ul>"},{"location":"v0.0/robot/Status/","title":"Status","text":""},{"location":"v0.0/robot/Status/#message-types","title":"Message Types","text":""},{"location":"v0.0/robot/Status/#batterystate","title":"BatteryState","text":"<ul> <li>Fields:<ul> <li><code>charge_percent</code> (int32): State of charge percent from 0 (empty) ~ 100 (full).</li> <li><code>state</code> (State): Represents the current state of the battery.</li> </ul> </li> <li> <p>Enums:</p> State Numeric Value Description STATE_UNKNOWN 0 The state is unknown. STATE_CHARGING 1 The battery is charging. STATE_DISCHARGING 2 The battery is discharging. STATE_FULL 3 The battery is fully charged. </li> </ul>"},{"location":"v0.0/robot/Status/#odometrystate","title":"OdometryState","text":"<ul> <li>Fields:<ul> <li><code>pose</code> (Pose): Current robot position and orientation</li> <li><code>twist</code> (Twist): A message containing the linear and angular velocity of the robot.</li> </ul> </li> </ul> <p>A positive linear velocity means the robot is moving forward in the direction of the Pose.heading, while a negative is opposite of the Pose.heading.</p> <p>A positive angular velocity means the robot is turning clockwise when looking from above, and negative is counter-clockwise when looking from above.</p> <p>If twist is 0, i.e. linear and angular velocities are 0, the robot is stationary.</p>"},{"location":"v0.0/robot/System/","title":"System","text":""},{"location":"v0.0/robot/System/#message-types","title":"Message Types","text":""},{"location":"v0.0/robot/System/#systeminfo","title":"SystemInfo","text":"<ul> <li>Fields:<ul> <li><code>software_version</code> (string): Distribution version e.g. \"servi-24.03\"</li> <li><code>firmware_version</code> (string): Firmware version e.g. \"3.2.4.1\"</li> <li><code>robot_family</code> (RobotFamily): Robot product family</li> <li><code>robot_id</code> (string): Unique robot id e.g. \"pennybot-abc123\"</li> <li><code>display_name</code> (string): Display name set for the robot e.g. \"Sir V\"</li> <li><code>locale_language</code> (string): IETF language tag represented in string e.g. \"en-US\"</li> <li><code>wifi_info</code> (WifiInfo): Various information of the wireless interface and connected Wi-Fi network.</li> </ul> </li> <li> <p>Enums:</p> RobotFamily Numeric Value Description ROBOT_FAMILY_UNKNOWN 0 The family is unknown. ROBOT_FAMILY_SERVI 1 The robot is a SERVI. ROBOT_FAMILY_SERVI_MINI 2 The robot is a SERVI MINI. ROBOT_FAMILY_SERVI_PLUS 3 The robot is a SERVI PLUS. ROBOT_FAMILY_SERVI_LIFT 4 The robot is a SERVI MINI LIFT. </li> </ul>"},{"location":"v0.1/settings/","title":"Settings","text":"<p>Settings are set through the SetSetting RPC. Both key and values are strings so types for each value must be filled as a string.</p> <p>To access the current and available settings, the SubscribeSettings RPC may be used.</p>"},{"location":"v0.1/settings/#maximum-navigation-speed","title":"Maximum Navigation Speed","text":"<p>The maximum navigation speed of the robot. The robot will accelerate up to this speed during navigation.</p> Key Unit Min Max Default <code>robot-max-vel-x</code> meters-per-second <code>0.2</code> <code>1.2</code> <code>0.8</code>"},{"location":"v0.1/settings/#unlock-wheels-during-idle","title":"Unlock Wheels During Idle","text":"<p>Locking state of the wheels when the robot is idle.</p> <p>True indicates that the wheels will not lock in idle. This allows the user to push the robot during this state.</p> <p>False indicates that the wheels will be locked during idle. This prevents the robot from being pushed or from rolling if it is idle on a slope.</p> Key Value Default <code>robot-enable-motors-coast-in-idle</code> <code>True</code> | <code>False</code> <code>True</code>"},{"location":"v0.1/common/Annotations/","title":"Annotations","text":""},{"location":"v0.1/common/Annotations/#message-types","title":"Message Types","text":""},{"location":"v0.1/common/Annotations/#eventmetadata","title":"EventMetadata","text":"Name Type Description <code>timestamp</code> Timestamp The time when the event was recorded. <code>sequence_number</code> int64 An incremental sequence number generated by the robot.The sequence number should never be negative and can be reset to 0.i.e. sequence is valid if it is larger than the previous number or 0."},{"location":"v0.1/common/Math/","title":"Math","text":""},{"location":"v0.1/common/Math/#message-types","title":"Message Types","text":""},{"location":"v0.1/common/Math/#point2d","title":"Point2D","text":"Name Type Description <code>x</code> float The x coordinate of the point in a 2D plane. <code>y</code> float The y coordinate of the point in a 2D plane."},{"location":"v0.1/common/Math/#pointwithorientation","title":"PointWithOrientation","text":"Name Type Description <code>x</code> float The x coordinate of the point. <code>y</code> float The y coordinate of the point. <code>orientation</code> Quaternion The orientation represented as a quaternion."},{"location":"v0.1/common/Math/#quaternion","title":"Quaternion","text":"Name Type Description <code>x</code> float The x component of the quaternion (imaginary part). <code>y</code> float The y component of the quaternion (imaginary part). <code>z</code> float The z component of the quaternion (imaginary part). <code>w</code> float The real (scalar) component of the quaternion."},{"location":"v0.1/common/Math/#twist","title":"Twist","text":"Name Type Description <code>linear_velocity</code> float The desired speed to drive up to in meters-per-second (m/s).A positive value should be used for driving forward and a negativevalue may be used to drive in reverse. <code>angular_velocity</code> float The desired rate of rotation in radians-per-second (rad/s).A positive value is used for a clockwise (right) point turn while anegative value should be used for counter-clockwise (left) point turn."},{"location":"v0.1/location/Annotation/","title":"Annotation","text":""},{"location":"v0.1/location/Annotation/#message-types","title":"Message Types","text":""},{"location":"v0.1/location/Annotation/#annotation","title":"Annotation","text":"Name Type Description <code>annotation_id</code> string Example: \"67305\" <code>created_time</code> Timestamp <code>display_name</code> string Example: \"ITCT annotation A\" <code>obstacles</code> Obstaclerepeated Areas on the map that the robot will try to avoid. <code>parameter_zones</code> ParameterZonerepeated Areas on the map that have specific parameters. <code>destinations</code> Destinationrepeated Destinations are used to define the single point of interest. <code>preferred_paths</code> PreferredPathrepeated Directional and Bi-Directional pathswhich robots will try to follow when nearby. <code>queues</code> Queuerepeated Queues are used to define the waiting area."},{"location":"v0.1/location/Annotation/#destination","title":"Destination","text":"Name Type Description <code>destination_id</code> string <code>display_name</code> string <code>destination_pose</code> PointWithOrientation Position on the map where the robot would try to navigate to and orientitself along that direction. <code>type</code> Type <code>docking_param</code> DockingParam DockingParam is used to specify the docking process at the destination.If docking_param exists, docking is needed.If docking_param does not exist, no docking is needed. <code>default_type_data</code> StringMapData Data specific to the destination type.The robot will use this data to interact with the destination."},{"location":"v0.1/location/Annotation/#destinationtype","title":"Destination.Type","text":"Name Number Description <code>TYPE_UNKNOWN</code> 0 <code>TYPE_DEFAULT</code> 1 The default destination type. The robot will try to navigate to this point. <code>TYPE_CONTACT_CHARGER</code> 2 The contact-type charger. The robot can charge through docking. <code>TYPE_INDUCTIVE_CHARGER</code> 3 The inductive-type charger. The robot can charge through docking, but no physical contact is needed."},{"location":"v0.1/location/Annotation/#dockingparam","title":"DockingParam","text":"Name Type Description <code>type</code> Type <code>reference</code> Reference <code>reference_id</code> string <code>tuning_params</code> Point2D The tuning parameters are used to define relative docking pose to thereference."},{"location":"v0.1/location/Annotation/#dockingparamreference","title":"DockingParam.Reference","text":"Name Number Description <code>REFERENCE_UNKNOWN</code> 0 <code>REFERENCE_DEFAULT</code> 1 The default reference is different for each destination type. For example, the default reference for TYPE_CONTACT_CHARGER is VL Marker. <code>REFERENCE_QR_CODE</code> 2 The QR code reference is used to specify the docking position. <code>REFERENCE_VL_MARKER</code> 3 The VL marker reference is used to specify the docking position."},{"location":"v0.1/location/Annotation/#dockingparamtype","title":"DockingParam.Type","text":"Name Number Description <code>TYPE_UNKNOWN</code> 0 <code>TYPE_DEFAULT</code> 1 The robot will run the default docking process at the destination."},{"location":"v0.1/location/Annotation/#stringmapdata","title":"StringMapData","text":"Name Type Description <code>data</code> DataEntry"},{"location":"v0.1/location/Annotation/#dataentry","title":"DataEntry","text":"Name Type Description <code>key</code> string <code>value</code> string"},{"location":"v0.1/location/Annotation/#obstacle","title":"Obstacle","text":"Name Type Description <code>obstacle_id</code> string <code>points</code> Point2Drepeated Points that define a polygon where the robot should avoid entering.The minimum number of points is 3. <code>type</code> Type"},{"location":"v0.1/location/Annotation/#obstacletype","title":"Obstacle.Type","text":"Name Number Description <code>TYPE_UNKNOWN</code> 0 <code>TYPE_SOFT_OBSTACLE</code> 1 Soft obstacle that the robot will try to avoid, but can still drive through if necessary. <code>TYPE_RESTRICTED_OBSTACLE</code> 2 Restricted obstacle that the robot cannot enter and cannot exit if it becomes stuck inside this zone."},{"location":"v0.1/location/Annotation/#preferredpath","title":"PreferredPath","text":"Name Type Description <code>preferred_path_id</code> string <code>graph_nodes</code> GraphNoderepeated List of graph nodes that make up the preferred path."},{"location":"v0.1/location/Annotation/#queue","title":"Queue","text":"Name Type Description <code>queue_id</code> string <code>queue_poses</code> GraphNoderepeated Represents a list of queuing points where the robot will wait. <code>destination_ids</code> stringrepeated These are end destinations that a queue can dequeue the robot to."},{"location":"v0.1/location/Location/","title":"Location","text":""},{"location":"v0.1/location/Location/#message-types","title":"Message Types","text":""},{"location":"v0.1/location/Location/#location","title":"Location","text":"Name Type Description <code>location_id</code> string Example: \"4RVF\" <code>created_time</code> Timestamp <code>modified_time</code> Timestamp <code>display_name</code> string Examples: \"City Deli &amp; Grill\", \"KNTH\" <code>floors</code> map&lt;int32, Floor&gt; Map of floor identifiers to floor information.The key is the floor level, and the value is the floor information."},{"location":"v0.1/location/Location/#locationfloor","title":"Location.Floor","text":"Name Type Description <code>display_name</code> string Example: \"Ground\" <code>sections</code> Section"},{"location":"v0.1/location/Location/#locationfloorsection","title":"# Location.Floor.Section","text":"Name Type Description <code>display_name</code> string Usually display_name will be empty if the section is not named. <code>map_ids</code> stringrepeated List of map identifiers associated with this section. <code>current_map_id</code> string Current map identifier."},{"location":"v0.1/location/Map/","title":"Map","text":""},{"location":"v0.1/location/Map/#message-types","title":"Message Types","text":""},{"location":"v0.1/location/Map/#map","title":"Map","text":"Name Type Description <code>map_id</code> string Example: \"9578\" <code>created_time</code> Timestamp <code>modified_time</code> Timestamp <code>display_name</code> string Example: \"ITCT SEOUL\" <code>map_data_id</code> string Current map data identifier that represents this map. <code>annotation_ids</code> stringrepeated List of annotation identifiers associated with this map. <code>current_annotation_id</code> string Current annotation identifier."},{"location":"v0.1/location/Map/#mapcontent","title":"MapContent","text":"Name Type Description <code>map_id</code> string <code>data</code> Data <code>annotation</code> Annotation"},{"location":"v0.1/location/Map/#mapcontentannotation","title":"MapContent.Annotation","text":"Name Type Description <code>destinations</code> Destinationrepeated"},{"location":"v0.1/location/Map/#mapcontentdata","title":"MapContent.Data","text":"Name Type Description <code>data</code> bytes The image PNG data for the map. <code>origin</code> Origin <code>m_per_pixel</code> float Maps real-world size to pixelated size. (meters per pixel)This value is equivalent to the resolution defined in the ROS map server. https://wiki.ros.org/map_server"},{"location":"v0.1/location/Map/#mapdata","title":"MapData","text":"Name Type Description <code>map_data_id</code> string <code>url</code> string URL to the image data for the map. <code>origin</code> Origin The Origin of the map. <code>m_per_pixel</code> float Maps real-world size to pixelated size (meters per pixel)This value is equivalent to the \"resolution\" defined in the ROS map server https://wiki.ros.org/map_server"},{"location":"v0.1/location/Map/#origin","title":"Origin","text":"Name Type Description <code>x_m</code> float This is the (x, y) coordinate of the origin of the map in the world frame. <code>y_m</code> float This is the y-coordinate of the origin of the map in the world frame. <code>yaw_radians</code> float This is the rotation around the z-axis (counterclockwise)of the map with respect to the world frame. A yaw of 0 means no rotation."},{"location":"v0.1/location/Types/","title":"Types","text":""},{"location":"v0.1/location/Types/#message-types","title":"Message Types","text":""},{"location":"v0.1/location/Types/#graphnode","title":"GraphNode","text":"Name Type Description <code>graph_node_id</code> string <code>graph_node_pose</code> PointWithOrientation Point with orientation of the GraphNode. <code>adjacent_graph_node_ids</code> stringrepeated Adjacent GraphNode IDs that robot can navigate from the current GraphNode."},{"location":"v0.1/location/Zones/","title":"Zones","text":""},{"location":"v0.1/location/Zones/#message-types","title":"Message Types","text":""},{"location":"v0.1/location/Zones/#directionzone","title":"DirectionZone","text":"Name Type Description <code>heading_radians</code> float The direction vector's angle in radians,relative to the map's origin and measured from the x-axis. <code>magnitude</code> int32 The magnitude of the direction vector.Typically set to 254 for hard direction zones. The larger the magnitude, the more the robot will try to align with the direction."},{"location":"v0.1/location/Zones/#exclusivezone","title":"ExclusiveZone","text":"Name Type Description <code>max_robots</code> int32 Maximum number of robots allowed to enter the zone."},{"location":"v0.1/location/Zones/#parameterzone","title":"ParameterZone","text":"Name Type Description <code>zone_id</code> string <code>points</code> Point2Drepeated Polygon defining the zone.The minimum number of points is 3. <code>direction_zone</code> DirectionZone <code>exclusive_zone</code> ExclusiveZone <code>ramp_zone</code> RampZone <code>sound_zone</code> SoundZone <code>speed_zone</code> SpeedZone"},{"location":"v0.1/location/Zones/#rampzone","title":"RampZone","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/location/Zones/#soundzone","title":"SoundZone","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/location/Zones/#speedzone","title":"SpeedZone","text":"Name Type Description <code>max_speed_m_per_sec</code> float Speed limit in the zone."},{"location":"v0.1/robot/Localization/","title":"Localization","text":""},{"location":"v0.1/robot/Localization/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Localization/#localizationgoal","title":"LocalizationGoal","text":"Name Type Description <code>pose</code> Pose"},{"location":"v0.1/robot/Localization/#localizationstate","title":"LocalizationState","text":"Name Type Description <code>state</code> State"},{"location":"v0.1/robot/Localization/#localizationstatestate","title":"LocalizationState.State","text":"Name Number Description <code>STATE_UNKNOWN</code> 0 <code>STATE_PREEMPTED</code> 1 Happens when the localization process is preempted before completion. <code>STATE_FAILED</code> 2 <code>STATE_SUCCEEDED</code> 3 <code>STATE_LOCALIZING</code> 4 The robot is actively performing localization."},{"location":"v0.1/robot/Mission/","title":"Mission","text":""},{"location":"v0.1/robot/Mission/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Mission/#destination","title":"Destination","text":"Name Type Description <code>destination_id</code> string"},{"location":"v0.1/robot/Mission/#genericgoal","title":"GenericGoal","text":"Name Type Description <code>goal_type</code> string The type of the goal (e.g., \"Pickup\", \"Dropoff\"). <code>parameters</code> map&lt;string, string&gt; Any optional parameters for the goal in a key-value format."},{"location":"v0.1/robot/Mission/#genericmission","title":"GenericMission","text":"Name Type Description <code>type</code> string The type of the generic mission (e.g., \"Traverse\", \"Loop\"). <code>goals</code> GenericGoalrepeated A list of generic goals associated with the mission.Each goal includes its type and other relevant information. <code>override_params</code> map&lt;string, string&gt; A map of key-value pairs for overriding default mission parameters.This provides flexibility to customize the mission's behavior."},{"location":"v0.1/robot/Mission/#goal","title":"Goal","text":"Name Type Description <code>destination</code> Destination <code>zone</code> Zone <code>pose</code> Pose"},{"location":"v0.1/robot/Mission/#mission","title":"Mission","text":"Name Type Description <code>type</code> Type <code>goals</code> Goalrepeated The list of goals or destinations for the mission. <code>override_params</code> MissionParams Override parameters for the mission settings, allowing specificconfiguration for this mission instance."},{"location":"v0.1/robot/Mission/#missiontype","title":"Mission.Type","text":"Name Number Description <code>TYPE_UNKNOWN</code> 0 Default value, indicates an unknown or unspecified mission type. <code>TYPE_ONEOFF</code> 1 A single-goal mission. <code>TYPE_ONEOFF_AUTO</code> 2 An automated single-goal mission that selects the best available goal. <code>TYPE_TRAVERSE</code> 3 A mission involving multiple destinations until a condition, such as weight limit, is met. <code>TYPE_LOOP</code> 4 A mission that repeatedly visits multiple destinations until a condition, such as weight limit, is met. <code>TYPE_WAIT</code> 5 A mission that remains at a specific location until triggered by an external event."},{"location":"v0.1/robot/Mission/#missioncommand","title":"MissionCommand","text":"Name Type Description <code>mission_id</code> string <code>command</code> Command"},{"location":"v0.1/robot/Mission/#missioncommandcommand","title":"MissionCommand.Command","text":"Name Number Description <code>COMMAND_UNKNOWN</code> 0 <code>COMMAND_CANCEL</code> 1 <code>COMMAND_PAUSE</code> 2 <code>COMMAND_RESUME</code> 3 <code>COMMAND_FINISH</code> 4"},{"location":"v0.1/robot/Mission/#missionparams","title":"MissionParams","text":"Name Type Description <code>traverse_params</code> TraverseParams <code>loop_params</code> LoopParams"},{"location":"v0.1/robot/Mission/#missionparamsmode","title":"MissionParams.Mode","text":"Name Number Description <code>MODE_UNKNOWN</code> 0 <code>MODE_DEFAULT</code> 1 <code>MODE_BUSSING</code> 2"},{"location":"v0.1/robot/Mission/#missionparamsloopparams","title":"MissionParams.LoopParams","text":"Name Type Description <code>mode</code> Mode"},{"location":"v0.1/robot/Mission/#missionparamstraverseparams","title":"MissionParams.TraverseParams","text":"Name Type Description <code>mode</code> Mode"},{"location":"v0.1/robot/Mission/#missionstate","title":"MissionState","text":"Name Type Description <code>mission_id</code> string <code>state</code> State <code>goals</code> Goalrepeated All goals for a given mission. <code>current_goal_index</code> int32 <code>navigation_status</code> NavigationStatus The current navigation status of the mission, reflecting the robot'sprogress toward or at its destination. <code>feedback</code> Any"},{"location":"v0.1/robot/Mission/#missionstatenavigationstatus","title":"MissionState.NavigationStatus","text":"Name Number Description <code>NAVIGATION_STATUS_UNKNOWN</code> 0 Default value, indicates an unknown or undefined navigation status. <code>NAVIGATION_STATUS_FINISHED</code> 1 Indicates that the robot has successfully arrived at its goal. <code>NAVIGATION_STATUS_FINISHED</code> 2 Indicates that the robot failed to reach its goal. <code>NAVIGATION_STATUS_STUCK</code> 3 Indicates that the robot is temporarily stuck but has not yet failed. <code>NAVIGATION_STATUS_DOCKING</code> 4 Indicates that the robot is in the process of docking at a charger or station. <code>NAVIGATION_STATUS_UNDOCKING</code> 5 Indicates that the robot is in the process of undocking at a charger or station. <code>NAVIGATION_STATUS_NAVIGATING</code> 6 Indicates that the robot is navigating to a destination but is not currently docking or undocking."},{"location":"v0.1/robot/Mission/#missionstatestate","title":"MissionState.State","text":"Name Number Description <code>STATE_UNKNOWN</code> 0 <code>STATE_DEFAULT</code> 1 Initial state when no mission has been run (e.g. empty feedback). <code>STATE_RUNNING</code> 2 <code>STATE_PAUSED</code> 3 <code>STATE_CANCELED</code> 4 <code>STATE_SUCCEEDED</code> 5 <code>STATE_FAILED</code> 6"},{"location":"v0.1/robot/Mission/#zone","title":"Zone","text":"Name Type Description <code>zone_id</code> string"},{"location":"v0.1/robot/Network/","title":"Network","text":""},{"location":"v0.1/robot/Network/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Network/#authentication","title":"Authentication","text":"Name Type Description <code>username</code> stringoptional User provided input for enterprise networks requiring username.For personal and unsecure networks, username may be omitted. <code>password</code> string User provided input for password input for secure networks."},{"location":"v0.1/robot/Network/#connectionoptions","title":"ConnectionOptions","text":"Name Type Description <code>cidr_ip</code> string Classless inter-domain routing IP used to configure a static IP.This should be a static IPv4 address followed by a \u2018/\u2019 and suffix.e.g. <code>\"192.168.1.123/24\"</code> <code>gateway_ip</code> string Network gateway that local traffic is routed to. e.g. <code>\"192.168.1.1\"</code> <code>dns_ips</code> stringrepeated A list of DNS servers to override the DNS resolution provided by the hostnetwork. e.g. <code>[\"8.8.8.8\", \"8.8.4.4\"]</code>"},{"location":"v0.1/robot/Network/#networkstate","title":"NetworkState","text":"Name Type Description <code>connected_wifi</code> Wifirepeated State related to the currently connected Wi-Fi.No connected_wifi indicates that no Wi-Fi network is connected."},{"location":"v0.1/robot/Network/#wifi","title":"Wifi","text":"Name Type Description <code>ssid</code> string SSID of Wi-Fi network. <code>signal_strength</code> int32 Signal strength of the connected Wi-Fi connection in intervals of 5,within a range of 0 to 100. <code>security</code> Security Security requirements for the network. <code>connected_state</code> Connection Currently connected Wi-Fi state."},{"location":"v0.1/robot/Network/#wificonnection","title":"Wifi.Connection","text":"Name Number Description <code>CONNECTION_UNKNOWN</code> 0 <code>CONNECTION_BEAR_CONNECTED</code> 1 Universe &gt; Bear services and network connection are both working. <code>CONNECTION_INTERNET_ONLY</code> 2 Internet is connected but universe connection cannot be established. <code>CONNECTION_NO_INTERNET</code> 3 Network is connected but it does not have an internet connection."},{"location":"v0.1/robot/Network/#wifisecurity","title":"Wifi.Security","text":"Name Number Description <code>SECURITY_UNKNOWN</code> 0 <code>SECURITY_UNSECURED</code> 1 Unsecured network that do not require any authentication. <code>SECURITY_PASSWORD_SECURED</code> 2 Password secured network. e.g. WPA2, WPA3 and WEP networks <code>SECURITY_USERNAME_PASSWORD_SECURED</code> 3 Login required network. i.e. Enterprise networks"},{"location":"v0.1/robot/Network/#wificonnections","title":"WifiConnections","text":"Name Type Description <code>saved_networks</code> Wifirepeated List of remembered Wi-Fi networks. (not necessarily available) <code>available_networks</code> Wifirepeated List of other available networks."},{"location":"v0.1/robot/Network/#wifiinfo","title":"WifiInfo","text":"Name Type Description <code>current_ssid</code> string Currently connected Wi-Fi network\u2019s SSID.This will be empty if the robot is not connected to a network. <code>cidr_ip</code> string Classless inter-domain routing IPv4 address followed by a suffixrepresenting the number of bits for the subnet mask.e.g. <code>\u201c192.168.1.123/24\u201d</code> <code>gateway_ip</code> string Gateway IP to direct local network traffic.This typically mirrors the first 3 octets in the network IP withthe last octet ending in 1. e.g. \u201c192.168.1.1\u201d <code>mac_address</code> string Unique MAC address for the Wi-Fi interface. e.g. <code>\u201caa:1a:a1:a1:1a:11\u201d</code> <code>dns_ips</code> stringrepeated A list of DNS servers to override the DNS resolution provided by the hostnetwork. e.g. <code>[\"8.8.8.8\", \"8.8.4.4\"]</code>"},{"location":"v0.1/robot/Robot/","title":"Robot","text":""},{"location":"v0.1/robot/Robot/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Robot/#odometrystate","title":"OdometryState","text":"Name Type Description <code>pose</code> Pose <code>twist</code> Twist A message containing the linear and angular velocity of the robot.A positive linear velocity means the robot is moving forward in thedirection of the Pose.heading, while a negative is opposite of thePose.heading.A positive angular velocity means the robot is turning clockwise whenlooking from above, and negative is counter-clockwise when lookingfrom above.If twist is 0, i.e. linear and angular velocities are 0, the robot isstationary."},{"location":"v0.1/robot/Robot/#pose","title":"Pose","text":"Name Type Description <code>x_meters</code> float x, y coordinates inside the Map relative to the map\u2019s specifiedorigin. <code>y_meters</code> float <code>heading_radians</code> float The heading of the robot in radians. Ranges from -PI to PI, with0.0 pointing along the x-axis."},{"location":"v0.1/robot/Robot/#posewithcovariance","title":"PoseWithCovariance","text":"Name Type Description <code>pose</code> Pose <code>covariance</code> doublerepeated A 36-element array, which is a flattened 6\u00d76 covariance matrix inrow-major order. Each element represents the covariance between statevariables (X, Y, Z, X-axis rotation, Y-axis rotation, Z-axis rotation)."},{"location":"v0.1/robot/RobotApiService/","title":"Robot API Service","text":"<p>The definition of Bear Robot API service.</p>"},{"location":"v0.1/robot/RobotApiService/#map","title":"Map","text":""},{"location":"v0.1/robot/RobotApiService/#getlocation","title":"GetLocation","text":"<ul> <li>Request Type: GetLocationRequest</li> <li>Response Type: GetLocationResponse</li> <li>Description:   Retrieve the current location data to which the robot is connected from   the Universe. If the robot is offline, it uses the cached Location data.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getmapcontent","title":"GetMapContent","text":"<ul> <li>Request Type: GetMapContentRequest</li> <li>Response Type: GetMapContentResponse</li> <li>Description:   Retrieve the current map content data, which is loaded on the robot.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#switchmap","title":"SwitchMap","text":"<ul> <li>Request Type: SwitchMapRequest</li> <li>Response Type: SwitchMapResponse</li> <li>Description:   Switches the current map to a specified map.   The request should specify a   floor level and section index to be used. Returns the map_id of the switched   map.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#mission","title":"Mission","text":""},{"location":"v0.1/robot/RobotApiService/#appendmission","title":"AppendMission","text":"<ul> <li>Request Type: AppendMissionRequest</li> <li>Response Type: AppendMissionResponse</li> <li>Description:   Appends the given mission to the end of the queue.   The mission will be added in the order it is received.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#chargerobot","title":"ChargeRobot","text":"<ul> <li>Request Type: ChargeRobotRequest</li> <li>Response Type: ChargeRobotResponse</li> <li>Description:   Create a mission to go charge a robot regardless of battery state.   The call will fail if the robot is already on a different mission. The current   mission needs to be canceled before the robot can be charged.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#createmission","title":"CreateMission","text":"<ul> <li>Request Type: CreateMissionRequest</li> <li>Response Type: CreateMissionResponse</li> <li>Description:   Creates a mission for a given type.   The call will fail if the robot cannot go on the requested mission.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribemissionstatus","title":"SubscribeMissionStatus","text":"<ul> <li>Request Type: SubscribeMissionStatusRequest</li> <li>Response Type: SubscribeMissionStatusResponse</li> <li>Description:   Subscribe to robot's mission status.   Upon subscription, the server immediately sends the latest known mission   status, followed by updates whenever the mission status changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#updatemission","title":"UpdateMission","text":"<ul> <li>Request Type: UpdateMissionRequest</li> <li>Response Type: UpdateMissionResponse</li> <li>Description:   Updates the specified mission with the given command.   The call will fail if the robot is not on the specified mission or cannot   execute the command.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#navigation","title":"Navigation","text":""},{"location":"v0.1/robot/RobotApiService/#driverobot","title":"DriveRobot","text":"<ul> <li>Request Type: DriveRobotRequest</li> <li>Response Type: DriveRobotResponse</li> <li>Description:   Manually drive the robot.   A fine grained level manual drive control that allows the user to specify a   desired linear and angular velocity. The command will be smoothed by the   robot. The request message should be streamed at a rate of at least 5Hz for   smooth operation. If the frequency doesn't meet the requirements, it will set   the commanded velocity to zero.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#localizerobot","title":"LocalizeRobot","text":"<ul> <li>Request Type: LocalizeRobotRequest</li> <li>Response Type: LocalizeRobotResponse</li> <li>Description:   Localize the robot to a localization goal.   If the goal is accepted, subcribe to SubscribeLocalizationStatus to get the   localization status.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#setemergencystop","title":"SetEmergencyStop","text":"<ul> <li>Request Type: SetEmergencyStopRequest</li> <li>Response Type: SetEmergencyStopResponse</li> <li>Description:   Enable or disable the emergency stop.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#setpose","title":"SetPose","text":"<ul> <li>Request Type: SetPoseRequest</li> <li>Response Type: SetPoseResponse</li> <li>Description:   Manually set the robot pose given a pose on the map and covariance matrix.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeemergencystopstatus","title":"SubscribeEmergencyStopStatus","text":"<ul> <li>Request Type: SubscribeEmergencyStopStatusRequest</li> <li>Response Type: SubscribeEmergencyStopStatusResponse</li> <li>Description:   Subscribe to the software emergency stop state.   Upon subscription, the server sends the current emergency stop state, followed   by updates whenever the emergency stop state changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribelocalizationstatus","title":"SubscribeLocalizationStatus","text":"<ul> <li>Request Type: SubscribeLocalizationStatusRequest</li> <li>Response Type: SubscribeLocalizationStatusResponse</li> <li>Description:   Subscribe to the robot's localization status.   Upon subscription, the latest known localization status will be sent. If the   robot is actively localizing, status will be published upon changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeodometrystatus","title":"SubscribeOdometryStatus","text":"<ul> <li>Request Type: SubscribeOdometryStatusRequest</li> <li>Response Type: SubscribeOdometryStatusResponse</li> <li>Description:   Subscribe to the robot's odometry status.   Upon subscription, the server provides regular updates (5Hz) of the odometry   status.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscriberobotpose","title":"SubscribeRobotPose","text":"<ul> <li>Request Type: SubscribeRobotPoseRequest</li> <li>Response Type: SubscribeRobotPoseResponse</li> <li>Description:   Subscribe to the robot's pose.   Upon subscription, the server provides regular updates (5Hz) of the robot's   estimated position.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#settings","title":"Settings","text":""},{"location":"v0.1/robot/RobotApiService/#setsetting","title":"SetSetting","text":"<ul> <li>Request Type: SetSettingRequest</li> <li>Response Type: SetSettingResponse</li> <li>Description:   Set the specified setting.   The request will be rejected if the setting key does not exists.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribesettings","title":"SubscribeSettings","text":"<ul> <li>Request Type: SubscribeSettingsRequest</li> <li>Response Type: SubscribeSettingsResponse</li> <li>Description:   Upon subscription, the latest setting states will be sent.   For every setting change, a full snapshot of the states will be sent.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#status","title":"Status","text":""},{"location":"v0.1/robot/RobotApiService/#subscribebatterystatus","title":"SubscribeBatteryStatus","text":"<ul> <li>Request Type: SubscribeBatteryStatusRequest</li> <li>Response Type: SubscribeBatteryStatusResponse</li> <li>Description:   Subscribe to the robot's battery status.   Upon subscription, the server immediately sends the latest known battery   status, followed by updates whenever the battery status changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeoperationstatus","title":"SubscribeOperationStatus","text":"<ul> <li>Request Type: SubscribeOperationStatusRequest</li> <li>Response Type: SubscribeOperationStatusResponse</li> <li>Description:   Subscribe to the robots's operation status.   Upon subscription, the server immediately sends the latest known operation   status, followed by updates whenever the operation status changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#system","title":"System","text":""},{"location":"v0.1/robot/RobotApiService/#connectwifi","title":"ConnectWifi","text":"<ul> <li>Request Type: ConnectWifiRequest</li> <li>Response Type: ConnectWifiResponse</li> <li>Description:   Connect to a specified Wi-Fi network.   SSID should be provided and nearby broadcasted networks may be scanned with   ListWifiConnections.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#forgetwifi","title":"ForgetWifi","text":"<ul> <li>Request Type: ForgetWifiRequest</li> <li>Response Type: ForgetWifiResponse</li> <li>Description:   Forget a saved Wi-Fi network.   When called, it forgets a Wi-Fi network identified by its ssid. The call will   fail if a network operation is in progress or the network is not found.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getsysteminfo","title":"GetSystemInfo","text":"<ul> <li>Request Type: GetSystemInfoRequest</li> <li>Response Type: GetSystemInfoResponse</li> <li>Description:   Get the overall robot system information.   When called, the server returns robot system information. The system info   tends to be static and does not change often.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#listwificonnections","title":"ListWifiConnections","text":"<ul> <li>Request Type: ListWifiConnectionsRequest</li> <li>Response Type: ListWifiConnectionsResponse</li> <li>Description:   List available and remembered network connections.   When called, the server returns lists of remembered Wi-Fi networks, which may   not necessarily be available, and returns lists of other available networks.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#runsystemcommand","title":"RunSystemCommand","text":"<ul> <li>Request Type: RunSystemCommandRequest</li> <li>Response Type: RunSystemCommandResponse</li> <li>Description:   Execute a system command on the robot.   Runs a system command. e.g. initiate robot reboot.   Refer to the SystemCommand proto for all available commands.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribenetworkstatus","title":"SubscribeNetworkStatus","text":"<ul> <li>Request Type: SubscribeNetworkStatusRequest</li> <li>Response Type: SubscribeNetworkStatusResponse</li> <li>Description:   Subscribe to the robot's network status.   Upon subscription, the server immediately sends the latest known network   status, followed by updates whenever the network status changes.</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/RobotApiService/#appendmissionrequest","title":"AppendMissionRequest","text":"Name Type Description <code>mission</code> Mission"},{"location":"v0.1/robot/RobotApiService/#appendmissionresponse","title":"AppendMissionResponse","text":"Name Type Description <code>mission_id</code> string The unique identifier of the appended mission."},{"location":"v0.1/robot/RobotApiService/#chargerobotrequest","title":"ChargeRobotRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#chargerobotresponse","title":"ChargeRobotResponse","text":"Name Type Description <code>mission_id</code> string"},{"location":"v0.1/robot/RobotApiService/#connectwifirequest","title":"ConnectWifiRequest","text":"Name Type Description <code>ssid</code> string SSID of Wi-Fi network. <code>authentication</code> Authentication Security details for the network.This field can be omitted if the network is unsecure. <code>connection_options</code> ConnectionOptions Optional parameters for static IP configuration."},{"location":"v0.1/robot/RobotApiService/#connectwifiresponse","title":"ConnectWifiResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#createmissionrequest","title":"CreateMissionRequest","text":"Name Type Description <code>mission</code> Mission"},{"location":"v0.1/robot/RobotApiService/#createmissionresponse","title":"CreateMissionResponse","text":"Name Type Description <code>mission_id</code> string"},{"location":"v0.1/robot/RobotApiService/#driverobotrequest","title":"DriveRobotRequest","text":"Name Type Description <code>twist</code> Twist The desired max linear and angular velocity to travel."},{"location":"v0.1/robot/RobotApiService/#driverobotresponse","title":"DriveRobotResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#forgetwifirequest","title":"ForgetWifiRequest","text":"Name Type Description <code>ssid</code> string"},{"location":"v0.1/robot/RobotApiService/#forgetwifiresponse","title":"ForgetWifiResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getlocationrequest","title":"GetLocationRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getlocationresponse","title":"GetLocationResponse","text":"Name Type Description <code>location</code> Location"},{"location":"v0.1/robot/RobotApiService/#getmapcontentrequest","title":"GetMapContentRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getmapcontentresponse","title":"GetMapContentResponse","text":"Name Type Description <code>map_content</code> MapContent"},{"location":"v0.1/robot/RobotApiService/#getsysteminforequest","title":"GetSystemInfoRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#getsysteminforesponse","title":"GetSystemInfoResponse","text":"Name Type Description <code>system_info</code> SystemInfo"},{"location":"v0.1/robot/RobotApiService/#listwificonnectionsrequest","title":"ListWifiConnectionsRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#listwificonnectionsresponse","title":"ListWifiConnectionsResponse","text":"Name Type Description <code>wifi_connections</code> WifiConnections"},{"location":"v0.1/robot/RobotApiService/#localizerobotrequest","title":"LocalizeRobotRequest","text":"Name Type Description <code>goal</code> LocalizationGoal"},{"location":"v0.1/robot/RobotApiService/#localizerobotresponse","title":"LocalizeRobotResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#runsystemcommandrequest","title":"RunSystemCommandRequest","text":"Name Type Description <code>system_command</code> SystemCommand"},{"location":"v0.1/robot/RobotApiService/#runsystemcommandresponse","title":"RunSystemCommandResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#setemergencystoprequest","title":"SetEmergencyStopRequest","text":"Name Type Description <code>e_stop_state</code> EmergencyStopState"},{"location":"v0.1/robot/RobotApiService/#setemergencystopresponse","title":"SetEmergencyStopResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#setposerequest","title":"SetPoseRequest","text":"Name Type Description <code>pose_with_covariance</code> PoseWithCovariance A pose and a covariance matrix, if the covariance is not set, the internal default values will be applied."},{"location":"v0.1/robot/RobotApiService/#setposeresponse","title":"SetPoseResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#setsettingrequest","title":"SetSettingRequest","text":"Name Type Description <code>setting</code> Setting"},{"location":"v0.1/robot/RobotApiService/#setsettingresponse","title":"SetSettingResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribebatterystatusrequest","title":"SubscribeBatteryStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribebatterystatusresponse","title":"SubscribeBatteryStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>battery_state</code> BatteryState"},{"location":"v0.1/robot/RobotApiService/#subscribeemergencystopstatusrequest","title":"SubscribeEmergencyStopStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeemergencystopstatusresponse","title":"SubscribeEmergencyStopStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>e_stop_state</code> EmergencyStopState"},{"location":"v0.1/robot/RobotApiService/#subscribelocalizationstatusrequest","title":"SubscribeLocalizationStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribelocalizationstatusresponse","title":"SubscribeLocalizationStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>localization_state</code> LocalizationState"},{"location":"v0.1/robot/RobotApiService/#subscribemissionstatusrequest","title":"SubscribeMissionStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribemissionstatusresponse","title":"SubscribeMissionStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>mission_state</code> MissionState"},{"location":"v0.1/robot/RobotApiService/#subscribenetworkstatusrequest","title":"SubscribeNetworkStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribenetworkstatusresponse","title":"SubscribeNetworkStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>network_state</code> NetworkState"},{"location":"v0.1/robot/RobotApiService/#subscribeodometrystatusrequest","title":"SubscribeOdometryStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeodometrystatusresponse","title":"SubscribeOdometryStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>odometry_state</code> OdometryState"},{"location":"v0.1/robot/RobotApiService/#subscribeoperationstatusrequest","title":"SubscribeOperationStatusRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribeoperationstatusresponse","title":"SubscribeOperationStatusResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>operation_state</code> OperationState"},{"location":"v0.1/robot/RobotApiService/#subscriberobotposerequest","title":"SubscribeRobotPoseRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscriberobotposeresponse","title":"SubscribeRobotPoseResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>pose</code> Pose"},{"location":"v0.1/robot/RobotApiService/#subscribesettingsrequest","title":"SubscribeSettingsRequest","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/RobotApiService/#subscribesettingsresponse","title":"SubscribeSettingsResponse","text":"Name Type Description <code>metadata</code> EventMetadata <code>settings_state</code> SettingsState"},{"location":"v0.1/robot/RobotApiService/#switchmaprequest","title":"SwitchMapRequest","text":"Name Type Description <code>floor_level</code> int32 <code>section_index</code> int32"},{"location":"v0.1/robot/RobotApiService/#switchmapresponse","title":"SwitchMapResponse","text":"Name Type Description <code>map_id</code> string"},{"location":"v0.1/robot/RobotApiService/#updatemissionrequest","title":"UpdateMissionRequest","text":"Name Type Description <code>mission_command</code> MissionCommand"},{"location":"v0.1/robot/RobotApiService/#updatemissionresponse","title":"UpdateMissionResponse","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/Settings/","title":"Settings","text":""},{"location":"v0.1/robot/Settings/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Settings/#setting","title":"Setting","text":"Name Type Description <code>key</code> string <code>value</code> string"},{"location":"v0.1/robot/Settings/#settingsstate","title":"SettingsState","text":"Name Type Description <code>settings</code> map&lt;string, string&gt; A map where each item is a pair of setting key and value."},{"location":"v0.1/robot/Status/","title":"Status","text":""},{"location":"v0.1/robot/Status/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/Status/#batterystate","title":"BatteryState","text":"Name Type Description <code>charge_percent</code> int32 State of charge from 0 (battery empty) to 100 (battery full). <code>state</code> State <code>charge_method</code> ChargeMethod"},{"location":"v0.1/robot/Status/#batterystatechargemethod","title":"BatteryState.ChargeMethod","text":"Name Number Description <code>CHARGE_METHOD_UNKNOWN</code> 0 <code>CHARGE_METHOD_NOT_CHARGING</code> 1 <code>CHARGE_METHOD_WIRED</code> 2 <code>CHARGE_METHOD_WIRELESS</code> 3"},{"location":"v0.1/robot/Status/#batterystatestate","title":"BatteryState.State","text":"Name Number Description <code>STATE_UNKNOWN</code> 0 <code>STATE_CHARGING</code> 1 <code>STATE_DISCHARGING</code> 2 Robot is not connected to the charger and is draining energy from the battery. <code>STATE_FULL</code> 3 While connected to the charger, the battery is fully charged, no more energy can be stored into the battery."},{"location":"v0.1/robot/Status/#emergencystopstate","title":"EmergencyStopState","text":"Name Type Description <code>emergency</code> Emergency"},{"location":"v0.1/robot/Status/#emergencystopstateemergency","title":"EmergencyStopState.Emergency","text":"Name Number Description <code>EMERGENCY_UNKNOWN</code> 0 <code>EMERGENCY_ENGAGED</code> 1 Triggers an emergency stop. Overrides and sets navigation-related velocity command to 0 to the motor. <code>EMERGENCY_DISENGAGED</code> 2 Wheels will resume acting upon software navigation commands."},{"location":"v0.1/robot/Status/#operationstate","title":"OperationState","text":"Name Type Description <code>system</code> System <code>system_message</code> string Optional message for human readability. Could be empty. <code>emergency</code> Emergency <code>emergency_message</code> string Optional message for human readability. Could be empty. <code>charging</code> Charging <code>mission</code> Mission"},{"location":"v0.1/robot/Status/#operationstatecharging","title":"OperationState.Charging","text":"Name Number Description <code>CHARGING_UNKNOWN</code> 0 <code>CHARGING_DISCHARGING</code> 1 No charging method is detected. The robot is able to navigate freely in this state. <code>CHARGING_WIRED</code> 2 The robot is connected to a cable charger. Navigation-related commands will be ignored until the cable charger is unplugged. <code>CHARGING_WIRELESS</code> 3 The robot is charging without being plugged into a cable charger. (i.e. inductive or contact charger) It is possible to navigate freely during this charging state."},{"location":"v0.1/robot/Status/#operationstateemergency","title":"OperationState.Emergency","text":"Name Number Description <code>EMERGENCY_UNKNOWN</code> 0 <code>EMERGENCY_ENGAGED</code> 1 Either robot's physical e-stop button is presses or a software e-stop has been triggered. Wheels are locked in a halted state and will not respond to software navigation commands. <code>EMERGENCY_DISENGAGED</code> 2 Both physical e-stop button is released and software e-stop is not triggered. Wheels will resume acting up on software navigation commands."},{"location":"v0.1/robot/Status/#operationstatemission","title":"OperationState.Mission","text":"Name Number Description <code>MISSION_UNKNOWN</code> 0 <code>MISSION_IDLE</code> 1 Indicates no mission is currently in progress irrespective of other states. <code>MISSION_IN_PROGRESS</code> 2 The robot is currently on a mission. While in progress, the robot cannot accept any new mission."},{"location":"v0.1/robot/Status/#operationstatesystem","title":"OperationState.System","text":"Name Number Description <code>SYSTEM_UNKNOWN</code> 0 <code>SYSTEM_OK</code> 1 No faults are detected in system operation. <code>SYSTEM_ERROR</code> 2 One or more errors are present on the robot. This could be software-related or hardware communication. The robot may not be operable depending on the nature of the error."},{"location":"v0.1/robot/System/","title":"System","text":""},{"location":"v0.1/robot/System/#message-types","title":"Message Types","text":""},{"location":"v0.1/robot/System/#systemcommand","title":"SystemCommand","text":"Name Type Description <code>reboot</code> RebootCommand"},{"location":"v0.1/robot/System/#systemcommandrebootcommand","title":"SystemCommand.RebootCommand","text":"<ul> <li>(No fields defined)</li> </ul>"},{"location":"v0.1/robot/System/#systeminfo","title":"SystemInfo","text":"Name Type Description <code>software_version</code> string Distribution version. e.g. <code>\"servi-24.03\"</code> <code>firmware_version</code> string Firmware version. e.g. <code>\"3.2.4.1\"</code> <code>robot_family</code> RobotFamily Robot product family. <code>robot_id</code> string Unique robot ID. e.g. <code>\"pennybot-abc123\"</code> <code>display_name</code> string Display name set for the robot. e.g. <code>\"Sir V\"</code> <code>locale_language</code> string IETF language tag represented in string. e.g. <code>\"en-US\"</code> <code>wifi_info</code> WifiInfo Various information of the wireless interface and connected Wi-Fi network."},{"location":"v0.1/robot/System/#systeminforobotfamily","title":"SystemInfo.RobotFamily","text":"Name Number Description <code>ROBOT_FAMILY_UNKNOWN</code> 0 <code>ROBOT_FAMILY_SERVI</code> 1 <code>ROBOT_FAMILY_SERVI_MINI</code> 2 <code>ROBOT_FAMILY_SERVI_PLUS</code> 3 <code>ROBOT_FAMILY_SERVI_LIFT</code> 4"},{"location":"v0.1/robot/System/#systemstate","title":"SystemState","text":"Name Type Description <code>health</code> Health State representing whether robot is in a healthy condition."},{"location":"v0.1/robot/System/#systemstatehealth","title":"SystemState.Health","text":"Name Number Description <code>HEALTH_UNKNOWN</code> 0 <code>HEALTH_OK</code> 1 <code>HEALTH_ERROR</code> 2"}]}